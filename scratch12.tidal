cps 1

hush

d1 $ slow 2.831 $ s "99atmos:5" # gain 0.8

d2 $ stack [ gain "<[1*<8 8 4> ~][1/2 ~]>" # s "99bd:12" # lpf 1500 # speed 0.9 |*| gain (scale 0.9 1.5 saw)
           , gain "<[~ 1][~ 1/2]>" # s "99atmos" # cut 2 # n "<0 1 2 3 4 5>"
           , gain "<[1 ~][1 ~]>" # s "99atmos" # cut 2 # gain 0
           , gain "1*<4 4 4 8>" # s "99hh"
           , slow 2 $ gain "[~ 1 ~ 1/4]" # s "industrial:7" # cut "-1"
           ]

d3 $ stack [slow 4 $ s "supersaw" # n "<a2 d3>/4" # voice 0.1 # legato 4]

hush

----------------

hush

d1 $ whenmod 12 10 (const $ (slow "<8 16>" $ striate 16 $ s "99i:9" # up "<c5 e5 b4>/2" # cut 1))
  $ slow 4 $ striate 16 $ s "99i:9" # up "<c5 e5 b4>/2" # cut 1

d2 $ whenmod 12 10 (const $ s "<[99bd*8] [99bd*4 ~ 99bd*2 ~]>" # gain 1.5) $
     stack [ gain "1*<1 2 8> 0" # s "99bd:5"
           , every 3 (fast 2) $ gain "[~ 1*<1 1 2> ~ 1/4]" # s "99sd:0" # gain 1.2
           , s "99hh*<4 4 8>"
           , slow "<2 4 8>" $ striate "<4 8 8 16>" $ s "crow" # gain 1.25 # up "<0 0 2>"
           ]


d3 $ s ""


-------------

hush

d1 $ stack [ slow 2 $ striate' 16 (1/8) $ s "99i:16"
           , slow 8 $ striate 8 $ s "99atmos:10"
           ]


----------------

--Cowboy Dance!

hush

setcps 1


--Tell him come right over
--He's my little cowboy soldier
--If you catch him rolling over
--He will press you into clover(???)

--Come over and meet him
--not too shabby on the weekend
--If you rub him on the shoulders
--He'll ignite your crimson clover (???)



d1 $ whenmod 12 8 (const $ loopAt 16 $ striate 4 $ s "99arpys:8") $ loopAt 16 $ striate 8 $ s "99arpys:8" --8

d2 $ whenmod 12 8 (const $ stack [s "99hh*<4 0 16 0>", s "99bd*<0 2 0 8>" # gain 1.2]) $
     stack [ s "99bd*2" # gain 1 # lpf 1500
           , s "~ ~ 99sd*<2 1> [~ 99sd/2]" # n 3 # cut 1
           , s "<99hh*8 99hh*16 99hh*8 [99hh*8 ~]>"
           ] # room 0.25 # orbit 1

d3 $ whenmod 12 8 (const $ s "supersaw*2>" # n "<g2>/4" # voice "0.2")
   $ s "<supersaw supersaw(5,8)>" # n "<c3 f2>/4" # voice 0.2

d3 $ s "" -- s "h"

d4 $ superimpose (slow 2 . rev) $ slow 4 $ every 3 (fast 2 . rev) $ n (scale "majPent" "-7 .. 0")
  # sound "superchip" # voice "0.1" # lpf (range 500 3500 (slow 2 sine)) # lpq 0.2
  # gain 0.8
  # crush 2


------------------

cps 1

do
  let ss = 8
  d1 $ slow ss $ every 2 (rev . striate 32) $ s "lfhh:1" # unit "c" # speed (1/ss) # cut 1 # lpf 500 # lpq 0.2


hush

d2 $ s ""

d3 $ slow 2 $
     stack [ s "~ 99bd ~ 99bd*<1 1 2>" # n 0 # lpf 500
           , gain "1 ~ 1/4 ~" # s "99sd" # n 0
           , s "99hh*8" # n 0
           ]

-------------


hush

d2 $ s ""

d1 $ stack [ fast 2 $ every 8 (const $ s "99i:7" # cut 1 # crush 3) $ every 4 (striate "<4 2 4 8>/4") $ s "dubby" # cut 1
           , every 2 (const $ s "") $ ((1/1024) ~>) $ s "~ 99bd*<1 1 2 1 4> ~ ~" # gain 1.5 # cut 1
           , ((1/1024) ~>) $ s "~ ~ ~ cp*<1 2>" # cut 1
           ]


------------

hush


do
  let arpyspeed = 8
  let arpyspeed2 = 7
  d1 $ juxBy 0.5 (# up "0") $ slow 64 $ striate' 256 (1/64) $ s "songone*2" # hpf (scale 2000 3000 (slow 8 sine)) # gain 1.5 # up "-7"
  d2 $ juxBy 0.5 (# up "0") $ slow 64 $ striate' 256 (1/64) $ s "songone*2" # lpf (scale 1500 3000 (slow 6 sine)) # gain 1.5 # up "-7"
  d3 $ slow arpyspeed $ s "funeral:5"
    # lpf (scale 500 2000 (slow (arpyspeed * 2) sine))
    # lpq (scale 0 0.2 (slow arpyspeed sine))
    # unit "c" # speed (1/arpyspeed)
    # gain (scale 0.75 1 (slow (arpyspeed * 4) sine))
  d4 $ slow arpyspeed2 $ s "funeral:5"
    # lpf 1000
    # lpq 0.1
    # unit "c" # speed (1/arpyspeed2)
    # gain (scale 0.75 1 (slow (arpyspeed2 * 4) sine))




  superimpose ( (# lpf 2000) . (# up "2") . (# gain (scale 0.75 1 (slow (arpyspeed * 8) sine))))

  --d3 $ slow arpyspeed $ s "newnotes" # gain 1 # unit "c" # speed (1/arpyspeed)



-----



cps 0.5



do
  let lfsp = 4
  d1 $ stack [ every 3 (const $ s "" # cut 1) $ gain "[1*2 ~] 1/2" # s "house" # n 0
             , fast 4 $ s "~ house*<1 2 1 4>" # n 3
             , s "[~ house] [~ house/3]" # n 7
             ]
  d2 $ degradeBy 0.25 $ slow 8 $ rev $ striate 64 $ s "lfhh:0" # lpf (scale 500 3000 (slow 2 sine)) # lpq 0.1 # gain 0.9
  d3 $ slow 4 $ rev $ striate 32 $ s "lfhh:0" # lpf 500 # lpq 0.1 # gain 1


------------

hush

setcps 0.5

d4 $ every 3 (fast 2) $ jux (rev . slow 2) $ n (scale "majPent" "0 .. 7") # sound "superchip" # voice "0.1" # lpf (range 500 3500 (slow 2 sine)) # lpq 0.2

d2 $ stack [ fast 2 $ s "~ 99bd"
           , s "99hh*8"
           , s "99sd ~"
           ]


--------------

setcps 0.75

do
  d1 $ slow 64 $ striate' 256 (1/64) $ s "songone*2" # hpf (range 2000 3000 (slow 8 sine)) # gain 2 # up "-7"
  d2 $ slow 64 $ striate' 256 (1/64) $ s "songone*2" # lpf (range 1500 3000 (slow 6 sine)) # gain 1.2 # up "-7"


d4 $ superimpose (slow "<2 1 0.25 3 1 0.5>" . rev) $ degradeBy 0.25 $ slow 2 $ n (scale "minPent" "-7 .. 0")
    # sound "superchip" # voice "0.2" # lpf 1500 # lpq 0.1
    # gain 0.9
    # crush 2


hush


-----------------------

setcps (45/60)

setcps (30/60)

-- This is what we been doing

hush

do
  let sil p = whenmod 16 12 (const $ p)
  let lpfr l h s = lpf (range l h (slow s sine))
  let humanize =  nudge $ choose [(-0.02),(-0.019)..0.02]
  let mel1 = n (scale "majPent" "<0> .. <7>" + "<0 5>/16") # sound "superchip" # voice "0.1"
  let melody = sil (s "") $ juxBy (0.5) (slow "<2 0.5 1 0.5>" . rev) $ mel1 # lpfr 500 3500 6 # lpq 0.1 # room 0.5 # orbit 1
  let lowmelody = slow 4 $ n (scale "majPent" "0 3 4 2" + "<0 5>/16") # sound "superchip" # voice "0.1" # lpf 500 # lpq 0.1 # room 0.5 # orbit 1
  let drums = sil (s "99hh*<4 8 0 16>") $ stack [ s "[~ 99hh*<1 1 1 2>]*4" # humanize, s "[99bd*<1 2 1 4> ~]*2", s "[~ 99sd]*2"] # gain 1.15
  d4 $ stack [melody, drums, lowmelody]
  d2 $ sil (striate 8 $ s "crow") $ s ""






--d5 $ superimpose (0.15 <~) . (degradeBy 0.75) $ juxBy (0.5) (rev . slow "<2 0.5 1 0.5>") $ slow 4 $ n (scale "majPent" "0 .. 7")
--  # sound "superchip" # voice "0.1"



--------------------

hush

setcps 1

solo 3

unsolo 3

d1 $ whenmod 24 16 (const $ s "") $ fast "1" $ scramble 4 $ n (scale "aeolean" "-5 .. -2") # sound "supersaw" # voice "0.1"

d3 $ whenmod 24 22 (const $ s "") $ superimpose (rev . slow 2) $ slow 4 $ n (scale "aeolean" "0 .. 3")
  # sound "superchip"
  # voice "0.1"
  # lpf (range 500 1500 (slow 4 sine)) # lpq 0.1 # crush 2
  # gain 0.9

d2 $ whenmod 24 16 (const $ s "") $
     stack [ s "99bd*<1 2 1 4> ~ 99bd/2 ~" # n 8
           , s "~ industrial:1 ~ industrial:6/2"
           , s "~ ~ print ~" # n "<7 7 7 10>"
           ] # gain 1.3

d4 $ s "" --slow 16 $ rev $ striate' 128 (1/32) $ s "99arpys:5" # lpf 500 # gain 1.4 # crush 3 # cut 1


----



hush

d1 $ s "99bd"

d1 $ s "superpiano" # pan (slow 8 sine) # sustain 4 # n (scale "minPent" "<0 1>/4") # velocity 1.25  # lpf 2500

d4 $ stack [ s "superpiano" # pan (slow 8 sine) # sustain 4 # n (scale "minPent" "<0 1>/4") # velocity 1.25  # lpf 2500
           , fast "<0.25 1 0.5 2>" $ rev $ scramble 4 $ s "superpiano*8" # n (scale "minPent" "0 .. 7") # velocity "1 1 1 1"  # lpf 2500
           , s "99bd" # lpf 2500
           , s "[~ 99hh*1]*2"
           , s "~ 99sd"
           ]


----------

-- HOLY FUCK DUDE


hush

setcps (35/60) --somewhere around here

do
  let gs = sound "superchip" # crush 2 # lpf 1500 # room 0.75
  d1 $ whenmod 12 10 (const $ s "") $ sometimes rev $ slow "<2 1 2>" $ n (arp "<thumbup thumbupdown>" "<g3'min c4'min>") # sound "superchip" # crush 2 # lpf 2500
  d2 $ whenmod 12 10 (const $ sound "<superchip ~>" # crush 2 # room 0.75 # n "g3" # lpf 3000) $ fast "<2 4>" $ n (arp "converge" "g3'min") # gs


--d1 $ slow "<2 4>" $ superimpose (rev . fast 2) $ n (arp "<down updown>" "<c3'min ef4'maj bf3'maj>") # sound "superchip" # lpfs 1500 3000 16

d4 $ whenmod 12 10 (const $ s "<~ [99bd:2*12 ~]>" |*| gain 1.2 # room 0.75 # orbit 1 # cut 2) $
     stack [ s "99bd:2*<1 6 1 12>"
           , s "~ 99sd:1"
           , s "~ [~ 99hh]"
           ] |*| gain 2 # room 0.75 # orbit 1

d5 $ whenmod 12 11 (const $ s "") $ slow "<64 32>/4" $ rev $ striate' 512 (1/64) $ s "funeral:3*8" # speed 0.9 # gain 1.5 # cut 2 # crush 5 # room 0.75 # orbit 1

d6 $ s "" -- s "super808" # gain 1.5 # lpf 500


--------------

setcps (35/60)

do
  let sil p = whenmod 14 12 (const $ p)
  let onlywhen n1 n2 s' = whenmod n1 n2 (const $ s') $ s ""
  let humanize =  nudge $ choose [(-0.01),(-0.009)..0.01]
  let lpfs l h s = lpf (range l h (slow s sine))
  let progression =  "<g2'maj c3'min a2'min c3'min>"
  let bassg_inst = s "supersaw" # voice 0.01 # crush 2 # lpfs 500 1500 8 # lpq 0.1 # room 0.5 # orbit 1 |*| gain 0.8
  let bassg =  juxBy 0.5 rev $ fast "<2 2 1>" $ n (arp "<thumbup thumbupdown>" progression) # bassg_inst
  let drum = sil "" $ stack [ gain "<[1*<4 16> ~]>" # s "99bd:2", gain "~ [~ 1*<1 4>]" # s "99hh:2", s "~ [99sd:3*<1 2> ~]"] |*| gain 1.5 # room 0.75 # orbit 1
  let rhythmg = sil "" $ juxBy 0.5 (|+| n 7) $ fast "<2 8 4>" $ n "<g3 c4 a3 c4>/4" # s "superchip" # voice 0.01 # crush 2 # room 0.25 # orbit 0 |*| gain 0.8
  let vocals = sil "" $ jux (slow 4 . rev) $ slow "<2 1 4>" $ sound "supersquare(<5 3>,<4 8 4>)" # n (scale "minPent" "0 .. 7") # voice "0.1" # lpf 1000 # crush 2
  let crash = onlywhen 14 12 (s "<cc cc*4>")
  let hdcv = sil "" $ degradeBy 0.25 $ slow "<128 64>/4" $ rev $ striate' 512 (1/32) $ s "idum:0*<4 8>" # speed 1.25 |*| gain 1.5 # cut 4 # crush 5 # room 0.75 # orbit 1
  let cutvoc = onlywhen 14 12 (s "hh" # cut 4)
  d1 $ stack [bassg, drum, rhythmg, vocals, crash, hdcv, cutvoc]

d5 $ s ""

hush

----------------

setcps (160/60)

do
  let sil p = whenmod 64 48 (const $ p)
  let onlywhen n1 n2 s' = whenmod n1 n2 (const $ s') $ s ""
  let lpfs l h s = lpf (range l h (slow s sine))
  let drum = sil "99hh" $ stack [s "99bd:8" # gain "<1 0.9 1.2 1>", every 8 (fast 2) $ slow 2 $ s "99hh 99hh 99hh:4 99hh" # gain "1 1 1 1.2"] # cut 1 # room 0.5 # orbit 1
  let bass = slow "<4 8>" $ s "subroc3d*<8>" # n (run 8) # cut 2 # up "<0 2 5 7 5 3 1>" # room 0.2 # orbit 1 # lpf 1000
  let melody = sil "" $ juxBy 0.5 (slow "<2 4>" . rev) $ slow 4 $ s "superchip*<8 16>" # n (scale "minPent" "0 .. 7") # voice 0.1 # lpf 500 # lpq 0.25
  let cym = onlywhen 64 60 $ s "<cc ~ cc*2 ~>" # cut 5
  let noise = onlywhen 64 48 $ s "seawolf" # cut 1 # gain (range 0.5 1.5 (slow 64 sine))
  d1 $ stack [drum, melody, cym]


d1 $ s "99bd"


---------------------


setcps (40/60)

hush

do
  let sil p = whenmod 32 28 (const $ p)
  let onlywhen n1 n2 s' = whenmod n1 n2 (const $ s') $ s ""
  let lpfs l h s = lpf (range l h (slow s sine))
  let sing = sil "" $ juxBy 0.5 (rev . slow 2) $ slow "<4 4 4 8>" $ rev $ striate 32 $ s "idum" # lpfs 500 3000 8
  let drums = sil "" $ stack [s "<99bd:1(<3 5>,8) [99bd:1*<1 1 2> ~]>" # gain "<1 0.9 1.2 0.9>", s "~ [99sd:2*<1 2 1 4> ~]", fast "<1 2>" $ s "99hh*<1 2> 99hh 99hh:3 99hh" # gain "1 1 1 1.2"] # room 0.2 # orbit 1 |*| gain "1.25"
  let bass = sil "" $ slow "<2 4 2 1>" $ s "sf*16" # n (run 16) # lpf 2500 # cut 2 # speed "<1>" # crush 4
  let song = slow "<4>" $ rev $ striate 32 $ s "funeral"
  let song2 = slow "<4>" $ rev $ striate 32 $ s "funeral"
  let sing2 = sil (slow "<1>" $ song # lpf 1000 # crush 3) $ song # lpfs 1000 3000 24 # cut 6 # crush 3 # room 0.25 # orbit 1
  d1 $ stack [drums, bass, sing2]


----

hush

d1 $ stack [ s "99bd:2*<4 8>" # gain "{1 0.8 0.6}%4"
           , s "~ 99sd"
           , s "~ [~ 99hh]*2"
           ]


setcps (80/60)

setcps (80/60)

do
  let sil p = whenmod 12 10 (const $ p)
  let drop n = speed (range 1 0.5 $ slow n $ saw)
  let lpfs l h s = lpf (range l h (slow s sine))
  let onlywhen n1 n2 s' = whenmod n1 n2 (const $ s') $ s ""
  let progression =  "<c4'maj>"
  let bassg_inst = s "supersaw" # voice 0.1 # lpfs 500 4000 8 # lpq 0.1 # room 0.5 # orbit 1 |*| gain 0.7
  let melody = sil "" $ n ((arp "<up up thumbupdown>" progression) + "<0 5 7 3>/2" + "<0 5 7 14>/12") # bassg_inst
  let moogdrop  = s "<moog*4 moog*4 moog*4 silence>" # drop 4 # cut 1 # lpf 1500
  let drums = sil moogdrop $ stack [ s "99bd:12*2", s "99hh*<8 4 4 4>" # gain "{1.1 0.8 1 0.8}%4" ]
  let smash = onlywhen 12 10 (s "<~ ~ cc cc>")
  let bass = sil "" $ s "moog*<4 2>" # n "0 .. 4" # cut 1 # lpfs 500 1500 8
  d1 $ stack [drums, bass, smash, melody]


hush

-------------------

setcps (40/60)

hush

do
  let lpfs l h s = lpf (range l h (slow s sine))
  let mel = juxBy 0.5 (fast 2 . (# cut 3)) $ rev $ slow 64 $ striate' 512 (1/8) $ s "funeral:1*8" # cut 2 # lpfs 500 3500 8 # lpq 0.1
  let d = whenmod 64 60 (const $ s "") $ stack [s "99bd:1*4" # lpf 1000, s "99hh*8" # lpf 1500]
  d1 $ stack [mel, d]



hush

:t slow $ cP "1" "8"

:t toIntegral (cF 1 "1")

:t  cP "[]" "notes"

d1 $ fast (cP "1" "7") $ sound "[99bd*<1 4 1 2>, ~ [99sd 99hh]]" # voice 0.01 # gain 0.75 # n "c3" # lpf 1500 # crush 3

d2 $ slow 4 $ rev $ striate 32 $ s "idum" # lpf (range 100 7500 $ cF 1 "8") # gain 0.75

d3 $ fast 2 $  "superchip(5,8)" # n (cP "[]" "notes") # gain 0.75 # legato 2


---------------

--Organized metal:

hush

setcps (35/60) --somewhere around here


do
  let gs = sound "superchip" # crush 2 # lpf 1500 # room 0.75
  let gdrop = s "<superchip ~>" # crush 2 # room 0.75 # n "g3" # lpf 3000
  let drop p = whenmod 12 10 (const $ p)
  let drumdrop =  s "<~ [99bd:2*12 ~]>" |*| gain 1.2 # room 0.75 # orbit 1 # cut 2
  let g1 = drop (s "") $ sometimes rev $ slow "<2 1 2>" $ n (arp "<thumbup thumbupdown>" "<g3'min c4'min>") # sound "superchip" # crush 2 # lpf 2500
  let g2 = drop (gdrop) $ fast "<2 4>" $ n (arp "converge" "g3'min") # gs
  let g3 = slow "<2 4>" $ superimpose (rev . fast 2) $ n (arp "<down updown>" "<c3'min ef4'maj bf3'maj>") # sound "superchip" # lpfs 1500 3000 16
  let vocals = drop (s "") $ slow "<64 32>/4" $ rev $ striate' 512 (1/64) $ s "funeral:3*8" # speed 0.9 |*| gain 1.25 # cut 2 # crush 5 # room 0.75 # orbit 1
  d1 $ stack [g1, g2] |*| gain 0.9
  d4 $ drop drumdrop $ stack [ s "99bd:2*<1 6 1 12>", s "~ 99sd:1", s "~ [~ 99hh]"] |*| gain 1.25 # room 0.75 # orbit 1
  d5 $ vocals |*| gain 0.8

---------------

hush

setcps (40/60)

:t scale

d1 $ s "99bd"

do
  let mel = slow "<1 2>" $ (scale "majPent" ("0 .. 7" + (cP "[]" "notes"))) # s "superchip" # voice 0.1 # lpf (range 500 3000 $ slow 8 sine)
  d1 $ mel


----

setcps 0.8

hush

d1 $ slow 64 $ striate' 256 (1/64) $ s "songone*2" # hpf (range 500 10000 (cF 1 "8")) # gain 1.2

do
  d1 $ juxBy 0.5 (# up ("0" + cP 1 "8")) $ slow 64 $ striate' 256 (1/64) $ s "songone*2" # hpf (range 2000 3000 (slow 8 sine)) # gain 1.5 # up ("-7" + cP 1 "8")
  d2 $ s ""

  d2 $ juxBy 0.5 (# up "0") $ slow 64 $ striate' 256 (1/64) $ s "songone*2" # lpf (range 1500 3000 (slow 6 sine)) # gain 1.2 # up "-7"



-----------

hush

setcps (127/60)

:t cps

d1 $ slow 2 $ stack
           [ sometimes rev $ slow "<1 2 1 4>" $ s "superchip(3,8,2)" # legato 0.5 # n (cP "[]" "notes") # voice 0.1 # lpf (range 500 3500 $ slow 8 sine) # lpq (range 0 0.2 $ slow 16 sine)
           , s "~ superchip ~ superchip*<1 2 1 4>" # legato 1 #  n (cP "[]" "notes" - "<12>") # voice 0.1 # lpf (range 500 3500 $ slow 4 sine)
           ] # room 0.25 # orbit 1 |*| gain 1.2


setcps 1.25

d1 $ slow 1 $ stack
      [ sometimes rev $ s "superchip(3,8,2)" # legato 0.5 # n (cP "[]" "notes") # voice 0.1 # hpf 3000
      , fast "<1 4 1 2>" $ s "superchip*<1 2 1 4>"  # legato 1 #  n (cP "[]" "notes" - "<5>") # voice 0.5  # hpf 2500 |*| gain 0.8
      ] # room 0.25 # orbit 1 |*| gain 1.2


d2 $ stack [ whenmod 12 8 (const $ s "99bd:4*<4 4 8 2>") $ s "99bd:4*<1 1 1 2> ~" |*| gain "<0.95 1.2 1 1.1>"
           , s "99sd/2"
           , s "cp/2"
           , s "hh hh 99hh:3 hh" |*| gain "1.2 1 1 1"
           ] # gain 1 # room 0.25 # orbit 1



---------------

hush


setcps 0.75

d1 $ s "" -- off 0.25 ((|- n 5) . (# voice "0.7"))  $ slow "<1 2 1 4>" $ iter 8 $ s "superchip(5,8,2)" # n "<c3 d3 g3>/2" # voice "0.5" # gain 0.8 # legato 2 # lpf 1500 # attack 0 # release 2

d2 $ stack [ s "99bd" # lpf 250 # gain 0.8
           , s "~ [99sd/2, cp/2]" # lpf 1500
           , fast 2 $ s "99hh 99hh 99hh:3 99hh" # lpf 2500
           ]

hush

do
  let mel = slow "<2 4 2 8>/4" $ off ((1/16)) (|- n "<7 5 -7 -5>/8") $ iter 4 $ n (scale "minor" "-14 .. -7") # s "supersaw" # vowel "a" # legato 0.9 # voice 0.01 # lpf 1500 # crush 3 # room 0.25 # gain 0.6
  let ds = stack [s "99bd:2*<1 8 1 16>"  # gain 0.8, s "~ 99sd:2/2", gain "1.2 1 0.9 1 1 0.9 1 0.9" # s "99hh" # n "{4 4 4 4 3}%2 "# speed (choose [0.98, 0.99 .. 1.02])]  # room 0.15
  d1 $ stack [mel, ds]


----------------


hush

setcps 0.5

d1 $ slow 4 $ striate 8 $ s "res" # lpf (range 2500 6500 $ slow 8 sine) # lpq 0.2 # room 0.25  # cut 1

d2 $ stack [ s "99bd 99bd/4 99bd/4 99bd/4" # gain "<1.25 1 0.9 1>" # n 2
           , s "99hh*<4 8>/2" # gain "1.1 0.9 1 0.9" # n 3
           , s "~ 99sd:2*<1 1 1 <2 4 8>>"
           , s "~ cp"
           ] # room 0.25

d2 $ fast 1 $ stack [ s "99bd:3(3,8,2)", s "~ [99sd:5, cp]", s "super808" # lpf 500 # gain 1.25 # voice 0.1 ]


-----------

d1 $ s "99bd:1"

hush

--------------------


setcps 1.25

d1 $ stack
      [ fast 2 $ s "superchip(3,8)" # legato 1 # n (cP "[]" "notes") # voice 0.1 # lpf 2500 # lpq 0.1
      , slow 2 $ s "superchip" # legato 1.5 #  n (cP "[]" "notes" - "5") # voice 0.1  # lpf 500 |*| gain 0.8
      ] # room 0.25 # orbit 1 |*| gain 1


d2 $ fast 2 $ stack [ s "99bd:1"
           , s "~ 99sd"
           ] # gain 0.8


----------

hush

setcps (35/60) --somewhere around here

do
  let gs = sound "superchip" # crush 2 # lpf 1500 # room 0.75
  d1 $ sometimes rev $ fast "<1 2 1 4>" $ sound "superchip(3,5)" # n (cP "[]" "notes") # crush 2 # lpf 2500




:t n

:t arp

:t cP

  d2 $ whenmod 12 10 (const $ sound "<superchip ~>" # crush 2 # room 0.75 # n "g3" # lpf 3000) $ fast "<2 4>" $ n (arp "converge" "g3'min") # gs


--d1 $ slow "<2 4>" $ superimpose (rev . fast 2) $ n (arp "<down updown>" "<c3'min ef4'maj bf3'maj>") # sound "superchip" # lpfs 1500 3000 16

d4 $ whenmod 12 10 (const $ s "<~ [99bd:2*12 ~]>" |*| gain 1.2 # room 0.75 # orbit 1 # cut 2) $
     stack [ s "99bd:2*<1 6 1 12>"
           , s "~ 99sd:1"
           , s "~ [~ 99hh]"
           ] |*| gain 2 # room 0.75 # orbit 1

d5 $ whenmod 12 11 (const $ s "") $ slow "<64 32>/4" $ rev $ striate' 512 (1/64) $ s "funeral:3*8" # speed 0.9 # gain 1.5 # cut 2 # crush 5 # room 0.75 # orbit 1

d6 $ s "" -- s "super808" # gain 1.5 # lpf 500

---------------------------
